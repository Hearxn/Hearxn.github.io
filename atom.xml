<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fevorjava</title>
  
  <subtitle>爱生活,爱Java</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://Hearxn.github.io/"/>
  <updated>2019-10-25T05:58:26.485Z</updated>
  <id>http://Hearxn.github.io/</id>
  
  <author>
    <name>谢斌</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>认识单例模式</title>
    <link href="http://Hearxn.github.io/%E8%AE%A4%E8%AF%86%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html"/>
    <id>http://Hearxn.github.io/认识单例模式.html</id>
    <published>2019-10-23T16:25:46.000Z</published>
    <updated>2019-10-25T05:58:26.485Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1258281713.cos.ap-shenzhen-fsi.myqcloud.com/xiebin/11.png" alt></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://blog-1258281713.cos.ap-shenzhen-fsi.myqcloud.com/xiebin/11.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="java设计模式" scheme="http://Hearxn.github.io/categories/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="程序员基础" scheme="http://Hearxn.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>我没有“对象”</title>
    <link href="http://Hearxn.github.io/%E6%88%91%E6%B2%A1%E6%9C%89%E2%80%9C%E5%AF%B9%E8%B1%A1%E2%80%9D.html"/>
    <id>http://Hearxn.github.io/我没有“对象”.html</id>
    <published>2019-10-19T08:28:21.000Z</published>
    <updated>2019-10-23T16:16:52.713Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/19/qwWSfGo8LzvtEyX.png" alt></p><a id="more"></a><h4 id="类与对象"><a class="header-anchor" href="#类与对象">¶</a>类与对象</h4><p><img src="https://i.loli.net/2019/10/20/OGp38rkvwBu4Kyx.png" alt></p><h4 id="三大特征"><a class="header-anchor" href="#三大特征">¶</a>三大特征</h4><p>面向对象四大特征:  封装、继承、多态.</p><p><img src="https://i.loli.net/2019/10/22/sey5u9F1A3BSjzq.png" alt></p><h4 id="object类和包装类"><a class="header-anchor" href="#object类和包装类">¶</a>Object类和包装类</h4><h5 id="equals"><a class="header-anchor" href="#equals">¶</a>equals</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> Student st1 = <span class="keyword">new</span> Student(<span class="string">"小明"</span>,<span class="number">12</span>);</span><br><span class="line"> Student st2 = <span class="keyword">new</span> Student(<span class="string">"小明"</span>,<span class="number">12</span>);</span><br><span class="line"> System.out.println(st1.equals(st2));  <span class="comment">//false</span></span><br><span class="line">--------------------------------------</span><br><span class="line">  String s1 = <span class="keyword">new</span> String(<span class="string">"哈啊哈哈"</span>);</span><br><span class="line">  String s1 = <span class="keyword">new</span> String(<span class="string">"哈啊哈哈"</span>);</span><br><span class="line"> System.out.println(s1.equals(s2));   <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>大家都知道引用数据类型变量保存的是地址值,equals()方法比较是对象的内容,上述两组代码比较的内容一样,为啥结果却不一样,不要着急,我们首先看看Object类中的equals方法的源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">this</span> == obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观看源码才发现,Object类中的equals方法实际上比较的是地址值,Object类是根父类,而Student类并没有重写equals方法.所以st1 不等于st2.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) &#123; <span class="comment">//上来就比较俩变量的地址值是否相等</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;<span class="comment">//判断anObject是否属于String类型</span></span><br><span class="line">            String anotherString = (String)anObject;<span class="comment">//强转anObject类型为String</span></span><br><span class="line">            <span class="keyword">int</span> n = value.length; <span class="comment">//字符数组的长度,也就是字符串的长度</span></span><br><span class="line">            <span class="keyword">if</span> (n == anotherString.value.length) &#123;<span class="comment">//比较两字符串的长度是否相等</span></span><br><span class="line">                <span class="keyword">char</span> v1[] = value;</span><br><span class="line">                <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;<span class="comment">//不是String类型,就直接返回false</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//比较每一个字符是否相等</span></span><br></pre></td></tr></table></figure><p>由于String类对Object类的equals方法进行重写,确立比较每一个字符相等.所以s1 == s2.</p><h5 id="自定义类重写equals方法"><a class="header-anchor" href="#自定义类重写equals方法">¶</a>自定义类重写equals方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span> == obj)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(obj <span class="keyword">instanceof</span> Student)&#123;</span><br><span class="line">        Student cust = (Student) obj;</span><br><span class="line">        <span class="comment">//比较两个对象的每个属性是否都相同</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.age == cust.age &amp;&amp; <span class="keyword">this</span>.name.equals(cust.name))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1258281713.cos.ap-shenzhen-fsi.myqcloud.com/tx/%E9%9D%A2%E5%90%913.png" alt></p><h5 id="接口与抽象"><a class="header-anchor" href="#接口与抽象">¶</a>接口与抽象</h5><p><img src="https://blog-1258281713.cos.ap-shenzhen-fsi.myqcloud.com/xiebin/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A14.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/19/qwWSfGo8LzvtEyX.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="javaSE" scheme="http://Hearxn.github.io/categories/javaSE/"/>
    
    
      <category term="Java基础" scheme="http://Hearxn.github.io/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello,数组</title>
    <link href="http://Hearxn.github.io/Hello-%E6%95%B0%E7%BB%84.html"/>
    <id>http://Hearxn.github.io/Hello-数组.html</id>
    <published>2019-10-16T10:39:47.000Z</published>
    <updated>2019-10-19T08:19:18.148Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/10/16/Njd5CQPLlvrf4i6.png" alt></p><a id="more"></a><div class="note info">            <p>数组的思维导图</p>          </div><p><img src="https://i.loli.net/2019/10/19/9tsQBv6pT5r2VYA.png" alt></p><h4 id="数组的赋值"><a class="header-anchor" href="#数组的赋值">¶</a>数组的赋值</h4><h5 id="杨辉三角"><a class="header-anchor" href="#杨辉三角">¶</a>杨辉三角</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/18 18:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayExer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//打印10行的杨辉三角</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 思路分析:</span></span><br><span class="line"><span class="comment">        * 1.声明与初始化二维数组</span></span><br><span class="line"><span class="comment">        * 2.给数组的元素赋值</span></span><br><span class="line"><span class="comment">        * 3.遍历数组,展示效果</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="comment">//1.声明与初始化二维数组</span></span><br><span class="line">        <span class="keyword">int</span> [][] yangHui = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>][];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.给数组的元素赋值</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * yangHui[0] = new int[1];</span></span><br><span class="line"><span class="comment">        * yangHui[1] = new int[2];</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;yangHui.length ; i++) &#123;</span><br><span class="line">            yangHui[i] = <span class="keyword">new</span> <span class="keyword">int</span>[i+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//给首末元素赋值</span></span><br><span class="line">            yangHui[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            yangHui[i][i] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//给每行的非首末元素赋值</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; yangHui[i].length - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                    yangHui[i][j] = yangHui[i -<span class="number">1</span>][j -<span class="number">1</span>] +yangHui[i - <span class="number">1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.遍历数组,展示效果</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; yangHui.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; yangHui[i].length; j++) &#123;</span><br><span class="line">                System.out.print(yangHui[i][j] + <span class="string">"\t"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">=================================================</span><br><span class="line">输出结果:</span><br><span class="line">连接到目标 VM，地址：<span class="string">'127.0.0.1:59938'</span>, transport: <span class="string">'socket'</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">3</span><span class="number">3</span><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">4</span><span class="number">6</span><span class="number">4</span><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">5</span><span class="number">10</span><span class="number">10</span><span class="number">5</span><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">6</span><span class="number">15</span><span class="number">20</span><span class="number">15</span><span class="number">6</span><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">7</span><span class="number">21</span><span class="number">35</span><span class="number">35</span><span class="number">21</span><span class="number">7</span><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">8</span><span class="number">28</span><span class="number">56</span><span class="number">70</span><span class="number">56</span><span class="number">28</span><span class="number">8</span><span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">9</span><span class="number">36</span><span class="number">84</span><span class="number">126</span><span class="number">126</span><span class="number">84</span><span class="number">36</span><span class="number">9</span><span class="number">1</span></span><br><span class="line">断开与目标 VM 的连接，地址：<span class="string">'127.0.0.1:59938'</span>, transport: <span class="string">'socket'</span></span><br><span class="line"></span><br><span class="line">进程已结束，退出代码 <span class="number">0</span></span><br></pre></td></tr></table></figure><h4 id="数组的复制"><a class="header-anchor" href="#数组的复制">¶</a>数组的复制</h4><div class="note info">            <p>数组的复制:</p><p>1.for循环复制;</p><p>2.clone复制;</p><p>3.System.arraycopy复制;</p><p>4.Arrays.copyof复制</p>          </div><h5 id="for循环复制"><a class="header-anchor" href="#for循环复制">¶</a>for循环复制</h5><p>数组属于引用数据类型,变量保存的是地址值.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayCopy1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义两个数组</span></span><br><span class="line">        <span class="keyword">int</span>[] arr,arr2;</span><br><span class="line">        <span class="comment">//数组arr静态初始化</span></span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">        <span class="comment">//遍历数组中的元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//把变量arr2赋值给变量arr</span></span><br><span class="line">       arr2 = arr;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//修改arr2中偶索引的元素,使其等于索引值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                arr2[i] = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//遍历arr</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"arr = "</span> + arr);</span><br><span class="line">        System.out.println(<span class="string">"arr2 = "</span> + arr2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">============================</span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span><span class="number">6</span></span><br><span class="line"><span class="number">0</span><span class="number">2</span><span class="number">2</span><span class="number">4</span><span class="number">4</span><span class="number">6</span></span><br><span class="line">arr = [I@<span class="number">7</span>a7b0070</span><br><span class="line">arr2 = [I@<span class="number">7</span>a7b0070</span><br></pre></td></tr></table></figure><p>通过上述代码我们可以知道, arr2 = arr;这一步只是把arr保存的地址值[I@7a7b0070赋值给arr2,所以arr和arr 保存的是同一个地址值,修改arr2元素的值,arr元素的值也会随着改变.我们通过画图看看其怎么变化的</p><p><img src="https://i.loli.net/2019/10/18/lIxdEyQH3Gcmnzj.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/18 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayCopy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//定义两个数组</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> [] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">        <span class="comment">//通过for循环遍历进行数组的复制,并打印数组arr2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            arr2[i] = arr[i];</span><br><span class="line">            System.out.print(arr2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//修改数组arr元素的值,看数组arr2看是否发生变化</span></span><br><span class="line">       arr[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            System.out.print(arr2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"arr2 = "</span> + arr2);</span><br><span class="line">        System.out.println(<span class="string">"arr = "</span> + arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">==================</span><br><span class="line"><span class="number">123456</span></span><br><span class="line"><span class="number">123456</span></span><br><span class="line">arr2 = [I@<span class="number">1</span>b6d3586</span><br><span class="line">arr = [I@<span class="number">4554617</span>c</span><br></pre></td></tr></table></figure><p>通过for循环把arr复制给arr2,然后修改arr数组第一个元素的值发现arr2数组对应位置的值没有变,说明两个变量指向的不是同一块地址.</p><p><img src="https://i.loli.net/2019/10/18/EbRC8NLAXu6MTtk.png" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Arraycopy2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义引用数据类型的数组arr</span></span><br><span class="line">        String[] arr = <span class="keyword">new</span> String[]&#123;<span class="string">"AA"</span>,<span class="string">"BB"</span>,<span class="string">"CC"</span>,<span class="string">"DD"</span>,<span class="string">"EE"</span>,<span class="string">"FF"</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组的复制</span></span><br><span class="line">        String[] arr2 = <span class="keyword">new</span> String[arr.length];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            arr2[i] = arr[i];</span><br><span class="line">            System.out.print(<span class="string">"arr2数组元素"</span>+arr2[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//遍历arr数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(<span class="string">"arr = "</span> + arr[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//修改数组arr第一个元素的位置</span></span><br><span class="line">        arr[<span class="number">0</span>] = <span class="string">"aa"</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            System.out.print(arr2[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="clone复制"><a class="header-anchor" href="#clone复制">¶</a>clone复制</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayClone</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组arr,arr2</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">        <span class="comment">//进行复制</span></span><br><span class="line">        arr2 = arr.clone();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历数组arr和arr2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            System.out.print(arr2[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"=========================="</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//改变数组arr元素的值</span></span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">        <span class="comment">//遍历数组arr和arr2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            System.out.print(arr2[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"arr2 = "</span> + arr2);</span><br><span class="line">        System.out.println(<span class="string">"arr = "</span> + arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">------------------------------------------------------------</span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line">==========================</span><br><span class="line"><span class="number">10</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line">arr2 = [I@<span class="number">1</span>b6d3586</span><br><span class="line">arr = [I@<span class="number">4554617</span>c</span><br></pre></td></tr></table></figure><p>通过上述代码的演示,我们发现,通过clone方法进行数组的复制,通过改变数组arr元素的值,然后arr2对应位置元素的值却没有发生改变,说明两数组变量保存的不是同一个地址值.我们打印两个数组的地址值发现,地址值不同.</p><p>总结:</p><ol><li>一维数组：深克隆；（重新分配空间，并将元素复制过去）<br>二维数组：浅克隆。（只传递引用）</li></ol><p>分析:这里采用&quot;数组降维度&quot;的思想,一维数组降维度就成为元素,基本数据类型;而二维数组降维度就为一维数组,数组是引用数据类型,复制的是引用.</p><ol start="2"><li><p>浅复制和深复制</p><p>浅拷贝只复制指向某个对象的指针，而不复制对象本身，新旧对象还是共享同一块内存。但深拷贝会另外创造一个一模一样的对象，新对象跟原对象不共享内存，修改新对象不会改到原对象 ;</p><p>深拷贝指的是对象A复制给对象B时，A和B指向的不是同一个对象，通时A的对象成员AA和B的对象成员BB也指的不是同一个对象，如有更深层对象，以此类推。</p></li><li><p>浅克隆中，当对象被复制时只复制它本身和其中包含的值类型的成员变量，而引用类型的成员对象并没有复制</p></li><li><p>在Java语言中，通过<strong>覆盖Object类的clone()方法可以实现浅克隆</strong>。</p></li><li><p>在深克隆中，除了对象本身被复制外，对象所包含的所有成员变量也将复制。</p></li><li><p>在Java语言中，如果需要**实现深克隆，可以通过*<em>覆盖Object类的clone()方法实现，也*<em>可以通过序列化(Serialization)等方式</em></em>来实现。</p></li><li><p>Java语言提供的Cloneable接口和Serializable接口的代码非常简单，它们都是空接口，这种空接口也称为标识接口，标识接口中没有任何方法的定义，其作用是告诉JRE这些接口的实现类是否具有某个功能，如是否支持克隆、是否支持序列化等。</p></li><li><p>实现对象克隆有两种方式：</p><p>1). 实现Cloneable接口并重写Object类中的clone()方法；</p><p>2). 实现Serializable接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深度克隆。</p></li></ol><h5 id="system-arraycopy"><a class="header-anchor" href="#system-arraycopy">¶</a>System.arraycopy()</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">System.arraycopy()源码    </span><br><span class="line">    * <span class="meta">@param</span>      src      原数组.</span><br><span class="line">    * <span class="meta">@param</span>      srcPos   从原数组的那个位置开始拷贝.</span><br><span class="line">    * <span class="meta">@param</span>      dest     目标数组.</span><br><span class="line">    * <span class="meta">@param</span>      destPos  拷贝到目标数组的位置.</span><br><span class="line">    * <span class="meta">@param</span>      length   拷贝数组的长度.</span><br><span class="line">    * <span class="meta">@exception</span>  IndexOutOfBoundsException  索引越界异常.</span><br><span class="line">    * <span class="meta">@exception</span>  ArrayStoreException  .</span><br><span class="line">    * <span class="meta">@exception</span>  NullPointerException 空指针异常.</span><br><span class="line">    */</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">arraycopy</span><span class="params">(Object src,  <span class="keyword">int</span>  srcPos,</span></span></span><br><span class="line"><span class="function"><span class="params">                                       Object dest, <span class="keyword">int</span> destPos,</span></span></span><br><span class="line"><span class="function"><span class="params">                                       <span class="keyword">int</span> length)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayCopy3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组arr和arr2</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">        <span class="comment">//进行复制</span></span><br><span class="line">        System.arraycopy(arr,<span class="number">0</span>,arr2,<span class="number">0</span>,arr.length);</span><br><span class="line">        System.out.println(<span class="string">"-------------------------------------"</span>);</span><br><span class="line">        <span class="comment">//改变arr元素的值</span></span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">        <span class="comment">//遍历数组arr和arr2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            System.out.print(arr2[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"arr2 = "</span> + arr2);</span><br><span class="line">        System.out.println(<span class="string">"arr = "</span> + arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">=========================</span><br><span class="line">-------------------------------------</span><br><span class="line"><span class="number">100</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line">arr2 = [I@<span class="number">1</span>b6d3586</span><br><span class="line">arr = [I@<span class="number">4554617</span>c</span><br></pre></td></tr></table></figure><h5 id="arrays-copyof"><a class="header-anchor" href="#arrays-copyof">¶</a>Arrays.copyof()</h5><p>首先看下它的源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] copyOf(<span class="keyword">int</span>[] original, <span class="keyword">int</span> newLength) &#123;</span><br><span class="line">      <span class="keyword">int</span>[] copy = <span class="keyword">new</span> <span class="keyword">int</span>[newLength];</span><br><span class="line">      System.arraycopy(original, <span class="number">0</span>, copy, <span class="number">0</span>,</span><br><span class="line">                       Math.min(original.length, newLength));</span><br><span class="line">      <span class="keyword">return</span> copy;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>此方法需要两个参数,原始数组,新数组的长度.该方法底层 调用了System.arraycopy ,返回是一个原始数组的副本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayCopy3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组arr和arr2</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">        <span class="comment">//进行复制</span></span><br><span class="line">        arr2 = Arrays.copyOf(arr, arr.length);</span><br><span class="line">        <span class="comment">//改变arr元素的值</span></span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">        <span class="comment">//遍历数组arr和arr2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            System.out.print(arr2[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"arr2 = "</span> + arr2);</span><br><span class="line">        System.out.println(<span class="string">"arr = "</span> + arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">-------------------------------</span><br><span class="line"><span class="number">100</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line">arr2 = [I@<span class="number">1</span>b6d3586</span><br><span class="line">arr = [I@<span class="number">4554617</span>c</span><br></pre></td></tr></table></figure><h5 id="arrays-copyofrange"><a class="header-anchor" href="#arrays-copyofrange">¶</a>Arrays.copyOfRange</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//源码分析</span></span><br><span class="line"><span class="comment">//原始数组,从哪个索引开始复制,到哪个位置为止</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] copyOfRange(<span class="keyword">int</span>[] original, <span class="keyword">int</span> from, <span class="keyword">int</span> to) &#123;</span><br><span class="line">        <span class="comment">//新数组的长度</span></span><br><span class="line">        <span class="keyword">int</span> newLength = to - from;</span><br><span class="line">        <span class="keyword">if</span> (newLength &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="comment">//抛出非法参数异常</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(from + <span class="string">" &gt; "</span> + to);</span><br><span class="line">    <span class="comment">//创建副本数组copy</span></span><br><span class="line">        <span class="keyword">int</span>[] copy = <span class="keyword">new</span> <span class="keyword">int</span>[newLength];</span><br><span class="line">    <span class="comment">//调用System.arraycopy</span></span><br><span class="line">        System.arraycopy(original, from, copy, <span class="number">0</span>,</span><br><span class="line">                         Math.min(original.length - from, newLength));</span><br><span class="line">    <span class="comment">//返回一个原数组的副本</span></span><br><span class="line">        <span class="keyword">return</span> copy;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayCopy3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组arr和arr2</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">        <span class="comment">//进行复制</span></span><br><span class="line">        arr2 = Arrays.copyOfRange(arr,<span class="number">0</span>,arr.length);</span><br><span class="line">        <span class="comment">//改变arr元素的值</span></span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line">        <span class="comment">//遍历数组arr和arr2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            System.out.print(arr2[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"arr2 = "</span> + arr2);</span><br><span class="line">        System.out.println(<span class="string">"arr = "</span> + arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">===================</span><br><span class="line"><span class="number">100</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line"><span class="number">1</span><span class="number">2</span><span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br><span class="line">arr2 = [I@<span class="number">1</span>b6d3586</span><br><span class="line">arr = [I@<span class="number">4554617</span>c</span><br></pre></td></tr></table></figure><div class="note info">            <p>数组的反转</p>          </div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Arraycopy2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义引用数据类型的数组arr</span></span><br><span class="line">        String[] arr = <span class="keyword">new</span> String[]&#123;<span class="string">"AA"</span>,<span class="string">"BB"</span>,<span class="string">"CC"</span>,<span class="string">"DD"</span>,<span class="string">"EE"</span>,<span class="string">"FF"</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数组的反转</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length/<span class="number">2</span>; i++) &#123;</span><br><span class="line">            String temp = arr[i];</span><br><span class="line">            arr[i] = arr[arr.length - i -<span class="number">1</span>];</span><br><span class="line">            arr[arr.length - i -<span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//数组的遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组的查找"><a class="header-anchor" href="#数组的查找">¶</a>数组的查找</h4><h5 id="线性查找"><a class="header-anchor" href="#线性查找">¶</a>线性查找</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">线性查找:也叫线性搜索,从数组中搜索元素的算法,从头按顺序重复比较的方法;</span></span><br><span class="line"><span class="comment">        数据量很大时,比较次数会增加,需要花费大量时间.</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Arraycopy2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组arr</span></span><br><span class="line">        String[] arr = <span class="keyword">new</span> String[]&#123;<span class="string">"AA"</span>, <span class="string">"BB"</span>, <span class="string">"CC"</span>, <span class="string">"DD"</span>, <span class="string">"EE"</span>, <span class="string">"FF"</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//搜索: "EE"</span></span><br><span class="line">        String dest = <span class="string">"EE"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历数组,并与dest重复比较</span></span><br><span class="line">        <span class="comment">//定义标识符</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dest.equals(arr[i])) &#123;</span><br><span class="line">                System.out.println(<span class="string">"找到啦,i = "</span> + i);</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="keyword">true</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"对不起,没有找到"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="二分法查找"><a class="header-anchor" href="#二分法查找">¶</a>二分法查找</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day4;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">二分搜索: 从有序数组中搜索元素的算法.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArraySeach</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义数组arr</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;-<span class="number">98</span>,-<span class="number">34</span>,<span class="number">2</span>,<span class="number">34</span>,<span class="number">54</span>,<span class="number">66</span>,<span class="number">79</span>,<span class="number">105</span>,<span class="number">210</span>,<span class="number">333</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//搜索目标:-34</span></span><br><span class="line">        <span class="keyword">int</span> dest = -<span class="number">34</span>;</span><br><span class="line">        <span class="comment">//初始首索引</span></span><br><span class="line">        <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//初始末索引</span></span><br><span class="line">        <span class="keyword">int</span> end = arr.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(head &lt;= end)&#123;</span><br><span class="line">            <span class="keyword">int</span> middle = (head + end)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (dest == arr[middle])&#123;</span><br><span class="line">                System.out.println(<span class="string">"找到了指定位置,位置为: "</span> + middle);</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (arr[middle] &gt; dest)&#123;</span><br><span class="line">                end = middle -<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                head = middle + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">"没有找到"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组的排序"><a class="header-anchor" href="#数组的排序">¶</a>数组的排序</h4><h5 id="冒泡排序"><a class="header-anchor" href="#冒泡排序">¶</a>冒泡排序</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day5;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/19</span></span><br><span class="line"><span class="comment"> * 排序思想：两两元素进行比较后交换位置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArraySort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">43</span>,<span class="number">32</span>,<span class="number">76</span>,-<span class="number">98</span>,<span class="number">0</span>,<span class="number">64</span>,<span class="number">33</span>,-<span class="number">21</span>,<span class="number">32</span>,<span class="number">99</span>&#125;;</span><br><span class="line">        <span class="comment">//外层循环控制排序趟数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="comment">//内层循环控制每一趟排序多少次</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = arr[j];</span><br><span class="line">                    arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                    arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]+<span class="string">"\t"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/10/16/Njd5CQPLlvrf4i6.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="javaSE" scheme="http://Hearxn.github.io/categories/javaSE/"/>
    
    
      <category term="java基础" scheme="http://Hearxn.github.io/tags/java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>java基础语法</title>
    <link href="http://Hearxn.github.io/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html"/>
    <id>http://Hearxn.github.io/java基础语法.html</id>
    <published>2019-10-12T13:01:33.000Z</published>
    <updated>2019-10-16T10:03:45.478Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/1.png" alt></p><a id="more"></a><h3 id="第一阶段"><a class="header-anchor" href="#第一阶段">¶</a>第一阶段</h3><p>我把自己的学习笔记用思维导图的方式记录下来,如下图所示:<img src="https://i.loli.net/2019/10/13/LBtevg8hjY2DdXP.png" alt></p><h3 id="第二阶段"><a class="header-anchor" href="#第二阶段">¶</a>第二阶段</h3><p><img src="https://i.loli.net/2019/10/13/msHf2vhJj13KWSX.png" alt></p><p>关于自增的代码,可以发现:前++会先进行自增1,再进行赋值运算;而后++会先进行赋值运算,再进行自增.不管是前++还是后++,变量本身最终会自增1.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/13 14:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AriTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a1 = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b1 = ++a1;</span><br><span class="line">        System.out.println(<span class="string">"b1 = "</span> + b1);</span><br><span class="line">        System.out.println(<span class="string">"a1 = "</span> + a1);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"*****************"</span>);</span><br><span class="line">        <span class="keyword">int</span> a2 = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b2 = a2++;</span><br><span class="line">        System.out.println(<span class="string">"b2 = "</span> + b2);</span><br><span class="line">        System.out.println(<span class="string">"a2 = "</span> + a2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">输出结果为:</span><br><span class="line">            b1 = <span class="number">11</span></span><br><span class="line">            a1 = <span class="number">11</span></span><br><span class="line">            *****************</span><br><span class="line">            b2 = <span class="number">10</span></span><br><span class="line">            a2 = <span class="number">11</span></span><br><span class="line"></span><br><span class="line">            进程已结束，退出代码 <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AriTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span> b1 = <span class="number">127</span>;</span><br><span class="line">        b1++;</span><br><span class="line">        System.out.println(<span class="string">"b1 = "</span> + b1);<span class="comment">//-128?</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析:首先byte的范围是-128~127.字节长度为8位,左边是符号位;而127的二进制为 :0111 1111，所以执行 b1++;时，0111 111变为1000 0000，而128的二进制为：1000 0000，最高位为符号位.</p><h3 id="第三阶段"><a class="header-anchor" href="#第三阶段">¶</a>第三阶段</h3><p>这阶段主要是流程控制语句: if语句、switch语句 和循环语句.</p><p><img src="https://i.loli.net/2019/10/16/UJpuI1Qx3NyYvTf.png" alt></p><p>通过练习题加强对知识的理解.下面附上代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day02;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019/10/15 8:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">exer1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*有3个整数，给出提示信息：</span></span><br><span class="line"><span class="comment">        能否创建三角形；两边之和大于第三边  三个条件都要写</span></span><br><span class="line"><span class="comment">        如果能构建三角形，提示是直角三角形还是等边三角形等腰三角形还是普通三角形；</span></span><br><span class="line"><span class="comment">        最后输出三角形面积；*/</span></span><br><span class="line">        Scanner as = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"请输入第一个整数:"</span>);</span><br><span class="line">        <span class="keyword">int</span> a = as.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"请输入第二个整数"</span>);</span><br><span class="line">        <span class="keyword">int</span> b = as.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"请输入第三个整数"</span>);</span><br><span class="line">        <span class="keyword">int</span> c = as.nextInt();</span><br><span class="line">        <span class="keyword">double</span> s = (a + b + c) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">double</span> sr = Math.sqrt(s * (s - a) * (s - b) * (s - c));</span><br><span class="line">        <span class="keyword">if</span> ((a + b) &gt; c &amp;&amp; (b + c) &gt; a &amp;&amp; (c + a) &gt; b) &#123;</span><br><span class="line">            System.out.println(<span class="string">"能构建三角形"</span>);</span><br><span class="line">            <span class="keyword">if</span> ((a * a + b * b) == c * c || (b * b + c * c) == a * a || (c * c + a * a) == b * b) &#123;</span><br><span class="line">                System.out.println(<span class="string">"该三角形是直角三角形"</span>);</span><br><span class="line">                System.out.println(<span class="string">"三角形面积 = "</span> + sr);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == b &amp;&amp; b == c &amp;&amp; c == a) &#123;</span><br><span class="line">                System.out.println(<span class="string">"三角形为等边三角形"</span>);</span><br><span class="line">                System.out.println(<span class="string">"三角形面积 = "</span> + sr);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a == b || b == c || c == a) &#123;</span><br><span class="line">                System.out.println(<span class="string">"该三角形是等边三角形"</span>);</span><br><span class="line">                System.out.println(<span class="string">"三角形面积 = "</span> + sr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"不能构建三角形"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="求100以内的所有质数"><a class="header-anchor" href="#求100以内的所有质数">¶</a>求100以内的所有质数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day3;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/15 18:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">exer3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//求100以内的所有质数</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 思路分析:</span></span><br><span class="line"><span class="comment">         * 1.首先要明白质数含义:只能被1和他本身整除的数.</span></span><br><span class="line"><span class="comment">         * 2.对于某一个数a,可以试着让它除以a-1.....2,如果有任意一次除数为零,这个数a就不是质数.</span></span><br><span class="line"><span class="comment">         * 3.借助循环语句.外层循环遍历2-100之间的每一个整数(作为被除数).</span></span><br><span class="line"><span class="comment">         * 4.然后在内循环中用从2到它之间的数去除它,如果找到一个能整除它的数,内层循环将立即跳出.</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        <span class="comment">/*方式一:标识i是否被j除进</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        <span class="keyword">boolean</span> isFlag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">//遍历2-100之间的所有整数(作为被除数)</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//遍历j,j作为除数(2-100)</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">                    isFlag = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isFlag == <span class="keyword">true</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"i = "</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//重置isFlag</span></span><br><span class="line">            isFlag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day3;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/15 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">exer3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> isFlag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//遍历2-100之间的所有整数(作为被除数)</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//遍历j,j作为除数(2-100)</span></span><br><span class="line">            <span class="comment">//优化二:</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= Math.sqrt(i); j++) &#123;</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">                    isFlag = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="comment">//优化一:对本身不是质数的自然数有效</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isFlag == <span class="keyword">true</span>) &#123;</span><br><span class="line">               <span class="comment">// System.out.println("i = " + i);</span></span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//重置isFlag</span></span><br><span class="line">            isFlag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">    </span><br><span class="line">         System.out.println(<span class="string">" count = "</span> +  count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方式二:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xiebin.day3;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 谢斌</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2019-10-2019/10/15 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">exer3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">boolean</span> isFlag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">//遍历2-100之间的所有整数(作为被除数)</span></span><br><span class="line">        label:<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= Math.sqrt(i); j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">                   <span class="keyword">continue</span> label;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">                count++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"count = "</span> + count);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/1.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaSE" scheme="http://Hearxn.github.io/categories/JavaSE/"/>
    
    
      <category term="Java基础" scheme="http://Hearxn.github.io/tags/Java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://Hearxn.github.io/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://Hearxn.github.io/我的第一篇博客.html</id>
    <published>2019-05-11T17:20:56.359Z</published>
    <updated>2019-10-12T09:01:29.922Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/1.png" alt></p><a id="more"></a><h4 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h4><p>从今天开始,就正式开始我的java学习之旅了,本博客主要记录我的学习情况以及心得,小白一枚,博客之中有不当之处,还请各位多多指教,共同进步.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/1.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
